Currently working on: home-fallback
 - write the acceptance test
 - write the production code
    - make trash-put unit-testable
      - inject atomic_write
        - factor out atomic_write

    - split GlobalTrashCan in two classes (one for trash-put and one for 
      restore-trash)
       - divide methods
       - introduce hierarchy
       - perform split
       - fix constructors
          - split TrashDirectory (between trash-put and restore-trash)
             - mark TrashDirectory methods usage
             - adapt unit tests
             - split _home_trash_dir and _volume_trash_dir1/2 methods
       - remove hierarchy
 - clean:
    - update the bug link

Backlog:
 - add a test for trash-put and method 1 trashdir
 - add an automated test for checking man page installation
 - unificate "SEE ALSO" for all man pages
 - trash-list should handle .trashinfo from home trashdir that contains 
   relative path
 - trash-list should print also the orphan files
 - support alias rmdir=trash-put
 - don't use world writable trash
 - enable trash-put home fallback
 - trash-empty removes files until a certain amount of space has been restored
 - trash-list --raw
 - trash-list <directory-name>
 - trash-list -R <directory-name>                 # recursive
 - trash-restore <path>                           # restore the newest
 - trash-restore <path> <dest>                    # restore to a certain destination
 - trash-restore --trashed-on="Apr 15, 08" <path>
 - trash-restore --version
 - trash-empty --from=/.Trash
 - trash-empty should empty even the mac trash directory
 - TRASH_DATE=2012-09-12 trash-put <file>

Test to be ported to nosetests:
 - trash-put:
    - trash in home trashcan
    - print version
    - trash in volume trashcan 1
    - trash in volume trashcan 2
 - it should trash to $topdir/.Trash-UID when $topdir/.Trash is not suitable
    - when $topdir/.Trash does not exists 
    - when $topdir/.Trash is a symlink
    - when $topdir/.Trash is not sticky
 - should refuse to create the $topdir/.Trash/$uid directory if the 
   $topdir/.Trash is not sticky

