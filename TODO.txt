Command trash-put:
 x revise trash-put tests
 - test to be ported to nose:
    - trash in home trashcan
       - consolidate trash2.py in trash.py
    - print version
    - trash in volume trashcan 1
    - trash in volume trashcan 2
 - it should trash to $topdir/.Trash-UID when $topdir/.Trash is not suitable
    - when $topdir/.Trash does not exists 
    - when $topdir/.Trash is a symlink
    - when $topdir/.Trash is not sticky
 - should refuse to create the $topdir/.Trash/$uid directory if the 
   $topdir/.Trash is not sticky

Command trash-list:
 x set up integration test for ListCmd
 x when there's not trashed file
 x when there's only one trashed file
 x when there are multiple trashed files
 x support for trashed files on volume 1 trashcan
 x support for trashed files on volume 2 trashcan
 x error when a .trashinfo is empty
 x error when a .trashinfo is not readable
 x displays unknown date when .trashinfo does not contain DeletionDate
 x displays unknown date when .trashinfo contains an invalid DeletionDate
 x error when a .trashinfo does not contain the 'Path=' entry information
 x should check that the $topdir/.Trash directory has the sticky bit
 x should print version on --version
 - should check that the $topdir/.Trash is not a symbolic link
 - exception when a .trashinfo from home trashdir contains a path that is not 
   absolute
 - it should print also the orphan files

Environment:
 - use distribute as default

Features backlog:
 - trash-empty with unreadable trashinfo
 - support alias rmdir=trash-put
 - don't use world writable trash
 - trash-empty should empty even the mac trash directory
 - enable trash-put home fallback
 - trash-empty removes files until a certain amount of space has been restored
 - trash-list <directory-name>
 - trash-list -R <directory-name>                 # recursive
 - trash-restore <path>                           # restore the newest
 - trash-restore <path> <dest>                    # restore to a certain destination
 - trash-restore --trashed-on="Apr 15, 08" <path>
 - trash-empty --from=/.Trash
 - trash-rm '*.o'

